<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[闻道]]></title>
  <subtitle><![CDATA[闻道有先后]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-11-01T05:48:59.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[张省三]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Java位运算]]></title>
    <link href="http://yoursite.com/2015/11/01/Java%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>http://yoursite.com/2015/11/01/Java位运算/</id>
    <published>2015-11-01T05:26:51.000Z</published>
    <updated>2015-11-01T05:48:59.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Java位运算符">Java位运算符</h2><p>Java支持的位运算符有7个：</p>
<blockquote>
<ul>
<li>&amp;：按位与</li>
<li>|：按位或</li>
<li>^：按位异或</li>
<li>~：按位非</li>
<li>&lt;&lt;：左移运算符</li>
<li>&gt;&gt;：右移运算符</li>
<li>&gt;&gt;&gt;：无符号右移运算符</li>
</ul>
</blockquote>
<p>这里主要说一下前4个：</p>
<ul>
<li>与运算(&amp;)两个操作数的位都为 1，结果才为 1，否则结果为 0。</li>
<li>或运算(|)两个操作数的位只要有一个为 1，那么结果就是 1，否则就为 0。</li>
<li>异或运算(^)的两个操作数的位相同时结果为 0，不同时结果为 1。</li>
<li>非运算(~)的操作数的位如果为 0，结果是 1，如果为 1，结果是 0。</li>
</ul>
<p>eg:<br><a id="more"></a></p>
<pre><code><span class="comment">//        0100        0100        0100    </span>
<span class="comment">//    &amp;    0101    |    0101    ^    0101    </span>
<span class="comment">//        0100        0101        0001        </span>
        System.out.println(<span class="number">4</span>&amp;<span class="number">5</span>);<span class="comment">//4</span>
        System.out.println(<span class="number">4</span>|<span class="number">5</span>);<span class="comment">//5</span>
        System.out.println(~<span class="number">4</span>);
        System.out.println(<span class="number">4</span>^<span class="number">5</span>);<span class="comment">//1</span>
</code></pre><h2 id="使用">使用</h2><p>位运算符在计算机的底层操作中，平时应用程序中很少使用。有时由于数据库中表的数据量过于庞大，为了节省资源，不想添加额外字段，可以利用java位运算符在一个字段中保存多个状态值。<br>一个邮件推送服务的选项，有通知、私信、作业可选择。<br><img src="/images/rssletter.png" alt="rssletter"><br>可以将几个状态值定义为常量：</p>
<pre><code><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TONGZHI = <span class="number">1</span>;<span class="comment">//通知</span>
<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SIXIN = <span class="number">2</span>;<span class="comment">//私信</span>
<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ZUOYE = <span class="number">4</span>;<span class="comment">//作业</span>
<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TONGZHI_SIXIN = <span class="number">3</span> ;<span class="comment">//通知+私信</span>
<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TONGZHI_ZUOYE = <span class="number">5</span> ;<span class="comment">//通知+作业</span>
<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SIXIN_ZUOYE = <span class="number">6</span> ;<span class="comment">//私信+作业</span>
<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TONGZHI_SIXIN_ZUOYE = <span class="number">7</span> ;<span class="comment">//通知+私信+作业</span>
</code></pre><p>当前台页面传过来私信（2）时，后台代码中可以将异或（^）值保存到数据库中，假设已经选择了通知（1）：</p>
<pre><code><span class="title">rssletter</span><span class="regexp"> ^</span> SIXIN//将<span class="number">1</span>^<span class="number">2</span>=<span class="number">3</span>保存到数据库中
</code></pre><p>而前台页面中，可以使用或（|）来判断是否选择选项，进行显示</p>
<pre><code>&lt;input onchange=<span class="string">"return setInform();"</span> name=<span class="string">"rssinform"</span> id=<span class="string">"inform"</span> type=<span class="string">"checkbox"</span> <span class="preprocessor">#<span class="keyword">if</span>(rssletter|<span class="number">1</span> == <span class="number">1</span>) checked=<span class="string">"checked"</span> #end&gt;通知</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Java位运算符">Java位运算符</h2><p>Java支持的位运算符有7个：</p>
<blockquote>
<ul>
<li>&amp;：按位与</li>
<li>|：按位或</li>
<li>^：按位异或</li>
<li>~：按位非</li>
<li>&lt;&lt;：左移运算符</li>
<li>&gt;&gt;：右移运算符</li>
<li>&gt;&gt;&gt;：无符号右移运算符</li>
</ul>
</blockquote>
<p>这里主要说一下前4个：</p>
<ul>
<li>与运算(&amp;)两个操作数的位都为 1，结果才为 1，否则结果为 0。</li>
<li>或运算(|)两个操作数的位只要有一个为 1，那么结果就是 1，否则就为 0。</li>
<li>异或运算(^)的两个操作数的位相同时结果为 0，不同时结果为 1。</li>
<li>非运算(~)的操作数的位如果为 0，结果是 1，如果为 1，结果是 0。</li>
</ul>
<p>eg:<br>]]>
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="一个字段保存多个状态" scheme="http://yoursite.com/tags/%E4%B8%80%E4%B8%AA%E5%AD%97%E6%AE%B5%E4%BF%9D%E5%AD%98%E5%A4%9A%E4%B8%AA%E7%8A%B6%E6%80%81/"/>
    
      <category term="位运算" scheme="http://yoursite.com/tags/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java解析Word文件]]></title>
    <link href="http://yoursite.com/2015/10/08/Java%E8%A7%A3%E6%9E%90Word%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2015/10/08/Java解析Word文件/</id>
    <published>2015-10-08T13:52:27.000Z</published>
    <updated>2015-11-01T05:48:46.000Z</updated>
    <content type="html"><![CDATA[<p>之前做了一个题库导入的功能，模板为Word文件。系统用的Linux服务器，开始准备在Linux下处理。由于word中有一些高等数学、物理公式：<br><img src="/images/wmz.gif" alt="wmz"><br>使用apache的poi组件将word转为html，首先会将图片转为wmz格式，不支持网页中显示，再将wmz格式转为png格式，转出后的图片，出现像乱码一样的字符；然后，又使用batik组件先将wmz格式转为svg格式，再将svg格式转为png格式部分公式仍然出现乱码一样的字符：<br><img src="/images/svg_png.png" alt="svg_png"><br>然后，又换了一个思路，使用openOffice插件来处理，问题同样存在，未能解决。<br>折腾了半天，最后又回到了原点，在Windows下使用jacob组件将word转为html。整个过程分了下面四个步骤：<br><a id="more"></a></p>
<blockquote>
<ul>
<li>将上传的word文件写入服务器目录</li>
<li>调用Windows虚拟机上用jacob写的服务，将word解析为html</li>
<li>使用jsoup组件解析html，相关字段存入数据库中</li>
<li>删除相关文件</li>
</ul>
</blockquote>
<h2 id="将上传的word文件写入服务器目录">将上传的word文件写入服务器目录</h2><pre><code>InputStream <span class="keyword">in</span> = <span class="keyword">null</span>;
FileOutputStream fos = <span class="keyword">null</span>;
<span class="keyword">try</span> {
    <span class="keyword">in</span> = files.getInputStream();
    <span class="comment">//1.将上传的文件写入公共目录</span>
    fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"xxx/tiku_doc2html_temp/"</span>+fileName+<span class="string">".doc"</span>,<span class="keyword">false</span>);
    <span class="comment">//创建一个缓冲区</span>
    <span class="keyword">byte</span> buffer[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];
    <span class="comment">//判断输入流中的数据是否已经读完的标识</span>
    <span class="keyword">int</span> len = <span class="number">0</span>;
    <span class="comment">//循环将输入流读入到缓冲区当中，(len=in.read(buffer))&gt;0就表示in里面还有数据</span>
    <span class="keyword">while</span>((len=<span class="keyword">in</span>.read(buffer))&gt;<span class="number">0</span>){
        fos.write(buffer, <span class="number">0</span>, len);
    }

    fos.flush();
    System.<span class="keyword">out</span>.println(<span class="string">"word upload success..."</span>);
} <span class="keyword">catch</span> (Exception e1) {
    e1.printStackTrace();
}<span class="keyword">finally</span>{
    <span class="keyword">if</span>(<span class="keyword">in</span> != <span class="keyword">null</span>){                
        <span class="keyword">try</span> {
            <span class="keyword">in</span>.close();
        } <span class="keyword">catch</span> (IOException e) {
            e.printStackTrace();
        }
    }
    <span class="keyword">if</span>(fos != <span class="keyword">null</span>){
        <span class="keyword">try</span> {
            fos.close();
        } <span class="keyword">catch</span> (IOException e) {
            e.printStackTrace();
        }
    }
}
</code></pre><h2 id="调用Windows虚拟机上用jacob写的服务，将word解析为html">调用Windows虚拟机上用jacob写的服务，将word解析为html</h2><pre><code><span class="type">String</span> url = <span class="string">"http://xxx/wordtohtml/transform?docfile=E:/"</span>+fileName+<span class="string">".doc&amp;htmlfile=E:/"</span>+fileName+<span class="string">".html"</span>;
<span class="type">HttpGet</span> httpGet = new <span class="type">HttpGet</span>(url);
<span class="type">String</span> data = <span class="type">HttpUtil</span>.getString(httpAsyncClient, httpGet);
<span class="type">System</span>.<span class="keyword">out</span>.println(<span class="string">"---&gt;&gt;&gt;"</span>+data);

<span class="type">String</span> <span class="literal">result</span> = null;
<span class="keyword">if</span>(<span class="type">StringUtils</span>.isNotBlank(data)){
    com.alibaba.fastjson.<span class="type">JSONObject</span> jsonObj = com.alibaba.fastjson.<span class="type">JSONObject</span>
            .parseObject(data);
    <span class="keyword">if</span> (jsonObj != null &amp;&amp; <span class="string">"success"</span>.equals(jsonObj.getString(<span class="string">"status"</span>))) {
        <span class="type">System</span>.<span class="keyword">out</span>.println(<span class="string">"word2html success..."</span>);
        //<span class="number">3</span>.解析html，相关字段存入数据库中
        <span class="literal">result</span> = parseHtml(<span class="string">"xxx/tiku_doc2html_temp/"</span>+fileName+<span class="string">".html"</span>);
    }
}
</code></pre><h3 id="利用jacob组件将word解析为html">利用jacob组件将word解析为html</h3><pre><code><span class="annotation">@Path</span>(<span class="string">"wordtohtml"</span>)
public <span class="class"><span class="keyword">class</span> <span class="title">WordToHtmlController</span> </span>{
    <span class="built_in">int</span> WORD_HTML = <span class="number">8</span>;
    <span class="built_in">int</span> WORD_TXT = <span class="number">7</span>;
    <span class="built_in">int</span> EXCEL_HTML = <span class="number">44</span>;
    <span class="built_in">int</span> WORD_HTML_SIMPLE = <span class="number">10</span>;
    <span class="comment">/*
    * new Variant(10)筛选过的网页
    * new Variant(9) 单个文件网页
    * new Variant(8) 另存为网页
    * new Variant(7) 另存为txt格式
    * new Variant(6) 另存为rtf格式
    * new Variant(0) 另存为doc格式
    */</span>

    <span class="comment"><span class="markdown">/**
<span class="code">     * WORD转HTML</span>
<span class="code">     * </span>
<span class="code">     * @param docfile</span>
<span class="code">     *            WORD文件全路径</span>
<span class="code">     * @param htmlfile</span>
<span class="code">     *            转换后HTML存放路径</span>
<span class="code">     */</span></span></span>
    <span class="annotation">@Get</span>(<span class="string">"transform"</span>)
    public <span class="built_in">String</span> wordToHtml(Invocation inv,<span class="annotation">@Param</span>(<span class="string">"docfile"</span>) <span class="built_in">String</span> docfile,<span class="annotation">@Param</span>(<span class="string">"htmlfile"</span>) <span class="built_in">String</span> htmlfile) {
        System.out.println(docfile+<span class="string">"&lt;---&gt;"</span>+htmlfile);
        JSONObject jsonObj = <span class="keyword">new</span> JSONObject();
        ActiveXComponent app = <span class="keyword">null</span>;
        <span class="keyword">try</span> {
            app = <span class="keyword">new</span> ActiveXComponent(<span class="string">"Word.Application"</span>); <span class="comment">// 启动word</span>
            app.setProperty(<span class="string">"Visible"</span>, <span class="keyword">new</span> Variant(<span class="keyword">false</span>));
            app.setProperty(<span class="string">"DisplayAlerts"</span>, <span class="keyword">new</span> Variant(<span class="keyword">false</span>));
            Dispatch docs = app.getProperty(<span class="string">"Documents"</span>).toDispatch();
            Dispatch doc = Dispatch.invoke(
                    docs,
                    <span class="string">"Open"</span>,
                    Dispatch.Method,
                    <span class="keyword">new</span> <span class="built_in">Object</span>[] { docfile, <span class="keyword">new</span> Variant(<span class="keyword">false</span>),
                            <span class="keyword">new</span> Variant(<span class="keyword">true</span>) }, <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">1</span>]).toDispatch();
            Dispatch.invoke(doc, <span class="string">"SaveAs"</span>, Dispatch.Method, <span class="keyword">new</span> <span class="built_in">Object</span>[] {
                    htmlfile, <span class="keyword">new</span> Variant(WORD_HTML_SIMPLE) }, <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">1</span>]);
            Variant f = <span class="keyword">new</span> Variant(<span class="keyword">false</span>);
            Dispatch.call(doc, <span class="string">"Close"</span>, f);
<span class="comment">//            ComThread.Release();//释放com线程</span>
            jsonObj.put(<span class="string">"status"</span>, <span class="string">"success"</span>);
        } <span class="keyword">catch</span> (Error e) {
            System.out.println(<span class="string">"word转换html异常"</span>);
            jsonObj.put(<span class="string">"status"</span>, <span class="string">"error"</span>);
            e.printStackTrace();
        } <span class="keyword">finally</span> {
            <span class="keyword">if</span> (app != <span class="keyword">null</span>) {
                app.invoke(<span class="string">"Quit"</span>, <span class="keyword">new</span> Variant[] {});
                app = <span class="keyword">null</span>;
            }
            ComThread.Release();  
        }
        <span class="keyword">return</span> <span class="string">"@"</span>+jsonObj;
    }
｝
</code></pre><h2 id="使用jsoup组件解析html，相关字段存入数据库中">使用jsoup组件解析html，相关字段存入数据库中</h2><pre><code>代码略
</code></pre><h2 id="删除相关文件">删除相关文件</h2><pre><code><span class="comment">//4.删除文件</span>
<span class="keyword">try</span> {
    FileUtils.forceDelete(<span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"xxx/tiku_doc2html_temp/"</span>+fileName+<span class="string">".files"</span>));
    FileUtils.forceDelete(<span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"xxx/tiku_doc2html_temp/"</span>+fileName+<span class="string">".html"</span>));
    FileUtils.forceDelete(<span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"xxx/tiku_doc2html_temp/"</span>+fileName+<span class="string">".doc"</span>));
} <span class="keyword">catch</span> (IOException e) {
    e.printStackTrace();
}
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>之前做了一个题库导入的功能，模板为Word文件。系统用的Linux服务器，开始准备在Linux下处理。由于word中有一些高等数学、物理公式：<br><img src="/images/wmz.gif" alt="wmz"><br>使用apache的poi组件将word转为html，首先会将图片转为wmz格式，不支持网页中显示，再将wmz格式转为png格式，转出后的图片，出现像乱码一样的字符；然后，又使用batik组件先将wmz格式转为svg格式，再将svg格式转为png格式部分公式仍然出现乱码一样的字符：<br><img src="/images/svg_png.png" alt="svg_png"><br>然后，又换了一个思路，使用openOffice插件来处理，问题同样存在，未能解决。<br>折腾了半天，最后又回到了原点，在Windows下使用jacob组件将word转为html。整个过程分了下面四个步骤：<br>]]>
    
    </summary>
    
      <category term="batik" scheme="http://yoursite.com/tags/batik/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="jacob" scheme="http://yoursite.com/tags/jacob/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="jsoup" scheme="http://yoursite.com/tags/jsoup/"/>
    
      <category term="openoffice" scheme="http://yoursite.com/tags/openoffice/"/>
    
      <category term="poi" scheme="http://yoursite.com/tags/poi/"/>
    
      <category term="word" scheme="http://yoursite.com/tags/word/"/>
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[欢迎使用 Cmd Markdown 编辑阅读器]]></title>
    <link href="http://yoursite.com/2015/10/06/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8%20Cmd%20Markdown%20%E7%BC%96%E8%BE%91%E9%98%85%E8%AF%BB%E5%99%A8/"/>
    <id>http://yoursite.com/2015/10/06/欢迎使用 Cmd Markdown 编辑阅读器/</id>
    <published>2015-10-06T05:31:15.000Z</published>
    <updated>2015-10-06T09:17:56.000Z</updated>
    <content type="html"><![CDATA[<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p>
<blockquote>
<ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>
<p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"><br><a id="more"></a><br>除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：</p>
<h3 id="Windows/Mac/Linux_全平台客户端"><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">Windows/Mac/Linux 全平台客户端</a></h3><blockquote>
<p>请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class="icon-file"></i> <strong>新文稿</strong> 或者使用快捷键 <code>Ctrl+Alt+N</code>。</p>
</blockquote>
<hr>
<h2 id="什么是_Markdown">什么是 Markdown</h2><p>Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong> 或者 <em>斜体</em> 某些文字，更棒的是，它还可以</p>
<h3 id="1-_制作一份待办事宜_Todo_列表">1. 制作一份待办事宜 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表" target="_blank" rel="external">Todo 列表</a></h3><ul>
<li>[ ] 支持以 PDF 格式导出文稿</li>
<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>
<li>[x] 新增 Todo 列表功能</li>
<li>[x] 修复 LaTex 公式渲染问题</li>
<li>[x] 新增 LaTex 公式编号功能</li>
</ul>
<h3 id="2-_书写一个质能守恒公式[^LaTeX]">2. 书写一个质能守恒公式[^LaTeX]</h3><p>$$E=mc^2$$</p>
<h3 id="3-_高亮一段代码[^code]">3. 高亮一段代码[^code]</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="decorator">@requires_authorization</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment"># A comment</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'hello world'</span></span><br></pre></td></tr></table></figure>
<h3 id="4-_高效绘制_流程图">4. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图" target="_blank" rel="external">流程图</a></h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st=&#62;start: Start&#10;op=&#62;operation: Your Operation&#10;cond=&#62;condition: Yes or No?&#10;e=&#62;end&#10;&#10;st-&#62;op-&#62;cond&#10;cond(yes)-&#62;e&#10;cond(no)-&#62;op</span><br></pre></td></tr></table></figure>
<h3 id="5-_高效绘制_序列图">5. 高效绘制 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图" target="_blank" rel="external">序列图</a></h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alice-&#62;Bob: Hello Bob, how are you?&#10;Note right of Bob: Bob thinks&#10;Bob--&#62;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>
<h3 id="6-_绘制表格">6. 绘制表格</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="7-_更详细语法说明">7. 更详细语法说明</h3><p>想要查看更详细的语法说明，可以参考我们准备的 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown" target="_blank" rel="external">Cmd Markdown 简明语法手册</a>，进阶用户可以参考 <a href="https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册" target="_blank" rel="external">Cmd Markdown 高阶语法手册</a> 了解更多高级功能。</p>
<p>总而言之，不同于其它 <em>所见即所得</em> 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。<strong>Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。</strong> 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。</p>
<hr>
<h2 id="什么是_Cmd_Markdown">什么是 Cmd Markdown</h2><p>您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 <strong>编辑/发布/阅读</strong> Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。</p>
<h3 id="1-_实时同步预览">1. 实时同步预览</h3><p>我们将 Cmd Markdown 的主界面一分为二，左边为<strong>编辑区</strong>，右边为<strong>预览区</strong>，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！</p>
<h3 id="2-_编辑工具栏">2. 编辑工具栏</h3><p>也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 <strong>编辑区</strong> 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-editor.png" alt="tool-editor"></p>
<h3 id="3-_编辑模式">3. 编辑模式</h3><p>完全心无旁骛的方式编辑文字：点击 <strong>编辑工具栏</strong> 最右测的拉伸按钮或者按下 <code>Ctrl + M</code>，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！</p>
<h3 id="4-_实时的云端文稿">4. 实时的云端文稿</h3><p>为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 <strong>编辑工具栏</strong> 的最右侧提示 <code>已保存</code> 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。</p>
<h3 id="5-_离线模式">5. 离线模式</h3><p>在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。</p>
<h3 id="6-_管理工具栏">6. 管理工具栏</h3><p>为了便于管理您的文稿，在 <strong>预览区</strong> 的顶部放置了如下所示的 <strong>管理工具栏</strong>：</p>
<p><img src="https://www.zybuluo.com/static/img/toolbar-manager.jpg" alt="tool-manager"></p>
<p>通过管理工具栏可以：</p>
<p><i class="icon-share"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享<br><i class="icon-file"></i> 新建：开始撰写一篇新的文稿<br><i class="icon-trash"></i> 删除：删除当前的文稿<br><i class="icon-cloud"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地<br><i class="icon-reorder"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作<br><i class="icon-pencil"></i> 模式：切换 普通/Vim/Emacs 编辑模式</p>
<h3 id="7-_阅读工具栏">7. 阅读工具栏</h3><p><img src="https://www.zybuluo.com/static/img/toolbar-reader.jpg" alt="tool-manager"></p>
<p>通过 <strong>预览区</strong> 右上角的 <strong>阅读工具栏</strong>，可以查看当前文稿的目录并增强阅读体验。</p>
<p>工具栏上的五个图标依次为：</p>
<p><i class="icon-list"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落<br><i class="icon-chevron-sign-left"></i> 视图：互换左边编辑区和右边预览区的位置<br><i class="icon-adjust"></i> 主题：内置了黑白两种模式的主题，试试 <strong>黑色主题</strong>，超炫！<br><i class="icon-desktop"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验<br><i class="icon-fullscreen"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境</p>
<h3 id="8-_阅读模式">8. 阅读模式</h3><p>在 <strong>阅读工具栏</strong> 点击 <i class="icon-desktop"></i> 或者按下 <code>Ctrl+Alt+M</code> 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。</p>
<h3 id="9-_标签、分类和搜索">9. 标签、分类和搜索</h3><p>在编辑区任意行首位置输入以下格式的文字可以标签当前文档：</p>
<p>标签： 未分类</p>
<p>标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：</p>
<p><img src="https://www.zybuluo.com/static/img/file-list.png" alt="file-list"></p>
<h3 id="10-_文稿发布和分享">10. 文稿发布和分享</h3><p>在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class="icon-share"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！</p>
<hr>
<p>再一次感谢您花费时间阅读这份欢迎稿，点击 <i class="icon-file"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！</p>
<p>作者 <a href="http://weibo.com/ghosert" target="_blank" rel="external">@ghosert</a><br>2015 年 06月 15日    </p>
<p>[^LaTeX]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MathJax</a> 参考更多使用方法。</p>
<p>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，<strong>Cmd Markdown</strong> 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：</p>
<blockquote>
<ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
</blockquote>
<p><img src="https://www.zybuluo.com/static/img/logo.png" alt="cmd-markdown-logo"><br>]]>
    
    </summary>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2015/09/28/hello-world/"/>
    <id>http://yoursite.com/2015/09/28/hello-world/</id>
    <published>2015-09-28T14:44:42.000Z</published>
    <updated>2015-10-02T15:09:34.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a><br><a id="more"></a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html">Writing</a><br>]]>
    
    </summary>
    
  </entry>
  
</feed>
